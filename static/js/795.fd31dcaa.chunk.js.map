{"version":3,"file":"static/js/795.fd31dcaa.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-1/./src/components/Dialogs/DialogsItems/DialogsItems.module.css?86ae","components/Dialogs/DialogsItems/DialogsItems.jsx","webpack://react-1/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"messages\":\"Dialogs_messages__Cg2l+\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogsItems\":\"DialogsItems_dialogsItems__WTpXo\",\"messages\":\"DialogsItems_messages__CX-qQ\",\"item\":\"DialogsItems_item__J8Yqw\",\"active\":\"DialogsItems_active__9c483\",\"avatar\":\"DialogsItems_avatar__Cm8M1\"};","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport style from './DialogsItems.module.css';\n\nconst DialogsItems = (props) => {\n    let path = '/dialogs/' + props.id;\n    return (\n        <div className={style.item}>\n            <Link to={path}>\n                <img className={style.avatar} src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQDJaEoQJ0PLbNOn_xHRIw7mcyuIOj0_hVZlA&usqp=CAU\" alt=\"avatar\" />\n            </Link>\n            <NavLink to={path} className={({ isActive }) => (isActive ? style.active : '')} >\n                {props.name}\n            </NavLink>\n        </div>\n    );\n}\n\nexport default DialogsItems;","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"Message_avatar__BcHJo\",\"message\":\"Message_message__rjHQQ\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './Message.module.css';\n\nconst Message = (props) => {\n    return (\n        <div className={style.message}>\n            <Link to=\"#\">\n                <img className={style.avatar} src=\"https://media.istockphoto.com/id/1300845620/vector/user-icon-flat-isolated-on-white-background-user-symbol-vector-illustration.jpg?s=612x612&w=0&k=20&c=yBeyba0hUkh14_jgv1OKqIH0CCSWU_4ckRkAoy2p73o=\" alt=\"avatar\" />\n            </Link>\n            <div className={style.descr}>{props.text}</div>\n        </div>\n    );\n}\n\nexport default Message;","import React from 'react';\nimport { reset, Field, reduxForm } from 'redux-form';\nimport style from './Dialogs.module.css';\nimport DialogsItems from './DialogsItems/DialogsItems';\nimport Message from './Message/Message';\nimport { FormControl } from '../common/FormsControls/FormsControls';\nimport { requiredField, maxLength40 } from '../../utils/validators/validators';\n\n\nconst DialogAddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} >\n            <Field name={'dialogs'} component={FormControl} typeField={'textarea'} validate={[requiredField, maxLength40]} placeholder='Enter your message' cols=\"30\" rows=\"5\"></Field>\n            <div><button>Send</button></div>\n        </form>\n    );\n}\n\nconst afterSubmit = (result, dispatch) => dispatch(reset('dialogAddMessageForm'));\n\nconst DialogsReduxForm = reduxForm({ form: 'dialogAddMessageForm', onSubmitSuccess: afterSubmit })(DialogAddMessageForm);\n\nconst Dialogs = (props) => {\n\n    let dialogsElements = props.state.profilePage.dialogsData.map(element => <DialogsItems name={element.name} id={element.id} key={element.id} />);\n    let messagesElements = props.state.profilePage.messagesData.map(message => <Message text={message.message} key={message.id} />);\n\n    const addNewMessageForm = (formData) => {\n        props.addMessage(formData.dialogs);\n    };\n\n    return (\n        <div className={style.dialogs}>\n            <div className={style.dialogsItems}>\n                {dialogsElements}\n            </div>\n\n            <div className={style.messages}>\n                {messagesElements}\n            </div>\n\n            < DialogsReduxForm onSubmit={addNewMessageForm} />\n        </div>\n\n    );\n}\n\n\n\nexport default Dialogs;","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { addMessageCreater } from '../../redux/profileReducer';\nimport Dialogs from './Dialogs';\n\nlet mapStateToProps = (state) => {\n    return {\n        state: state\n    }\n};\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMessageBody) => {\n            dispatch(addMessageCreater(newMessageBody));\n        }\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n};\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}"],"names":["props","path","id","_jsxs","className","style","children","_jsx","Link","to","src","alt","NavLink","_ref","isActive","name","message","avatar","descr","text","DialogsReduxForm","reduxForm","form","onSubmitSuccess","afterSubmit","result","dispatch","reset","onSubmit","handleSubmit","Field","component","FormControl","typeField","validate","requiredField","maxLength40","placeholder","cols","rows","dialogsElements","state","profilePage","dialogsData","map","element","DialogsItems","messagesElements","messagesData","Message","dialogs","dialogsItems","messages","formData","addMessage","compose","connect","newMessageBody","addMessageCreater","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","React","render","this","Navigate"],"sourceRoot":""}